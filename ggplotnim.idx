orNoneScale	ggplotnim.html#orNoneScale,T,staticScaleKind	ggplotnim: orNoneScale[T: string | SomeNumber | FormulaNode](s: T;\n    scKind: static ScaleKind; axKind = akX; hasDiscreteness = false): Option[\n    Scale]	
initField	ggplotnim.html#initField,string,NimNode	ggplotnim: initField(name: string; val: NimNode): NimNode	
aes	ggplotnim.html#aes.m,varargs[untyped]	ggplotnim: aes(args: varargs[untyped]): untyped	
fillIds	ggplotnim.html#fillIds,Aesthetics,set[uint16]	ggplotnim: fillIds(aes: Aesthetics; gids: set[uint16]): Aesthetics	
ggplot	ggplotnim.html#ggplot,DataFrame,Aesthetics	ggplotnim: ggplot(data: DataFrame; aes: Aesthetics = aes(); backend = bkNone): GgPlot	
geom_point	ggplotnim.html#geom_point,Aesthetics,C,S,M,string,int,float,seq[float],string,string,string,A	ggplotnim: geom_point[C: PossibleColor; S: PossibleFloat; M: PossibleMarker;\n           A: PossibleFloat](aes: Aesthetics = aes(); data = DataFrame();\n                             color: C = missing(); size: S = missing();\n                             marker: M = missing(); stat = &quot;identity&quot;;\n                             bins = -1; binWidth = 0.0;\n                             breaks: seq[float] = @[]; binPosition = &quot;none&quot;;\n                             position = &quot;identity&quot;; binBy = &quot;full&quot;;\n                             density = false; alpha: A = missing()): Geom	
geom_errorbar	ggplotnim.html#geom_errorbar,Aesthetics,C,S,LT,string,int,float,seq[float],string,string,string	ggplotnim: geom_errorbar[C: PossibleColor; S: PossibleFloat; LT: PossibleLineType](\n    aes: Aesthetics = aes(); data = DataFrame(); color: C = missing();\n    size: S = missing(); lineType: LT = missing(); errorBarKind = ebLinesT;\n    stat = &quot;identity&quot;; bins = -1; binWidth = 0.0; breaks: seq[float] = @[];\n    binPosition = &quot;none&quot;; position = &quot;identity&quot;; binBy = &quot;full&quot;; density = false): Geom	
geom_linerange	ggplotnim.html#geom_linerange,Aesthetics,C,S,LT,string,int,float,seq[float],string,string,string	ggplotnim: geom_linerange[C: PossibleColor; S: PossibleFloat; LT: PossibleLineType](\n    aes: Aesthetics = aes(); data = DataFrame(); color: C = missing();\n    size: S = missing(); lineType: LT = missing(); stat = &quot;identity&quot;; bins = -1;\n    binWidth = 0.0; breaks: seq[float] = @[]; binPosition = &quot;none&quot;;\n    position = &quot;identity&quot;; binBy = &quot;full&quot;; density = false): Geom	
geom_bar	ggplotnim.html#geom_bar,Aesthetics,C,A,string,string	ggplotnim: geom_bar[C: PossibleColor; A: PossibleFloat](aes: Aesthetics = aes();\n    data = DataFrame(); color: C = missing(); alpha: A = missing();\n    position = &quot;stack&quot;; stat = &quot;count&quot;): Geom	
geom_line	ggplotnim.html#geom_line,Aesthetics,C,S,LT,FC,A,string,int,float,seq[float],string,string,string	ggplotnim: geom_line[C: PossibleColor; S: PossibleFloat; LT: PossibleLineType;\n          FC: PossibleColor; A: PossibleFloat](aes: Aesthetics = aes();\n    data = DataFrame(); color: C = missing(); size: S = missing();\n    lineType: LT = missing(); fillColor: FC = missing(); alpha: A = missing();\n    stat = &quot;identity&quot;; bins = -1; binWidth = 0.0; breaks: seq[float] = @[];\n    binPosition = &quot;none&quot;; position = &quot;identity&quot;; binBy = &quot;full&quot;; density = false): Geom	
geom_smooth	ggplotnim.html#geom_smooth,Aesthetics,C,S,LT,FC,A,float,string,int,int,float,seq[float],string,string,string	ggplotnim: geom_smooth[C: PossibleColor; S: PossibleFloat; LT: PossibleLineType;\n            FC: PossibleColor; A: PossibleFloat](aes: Aesthetics = aes();\n    data = DataFrame(); color: C = missing(); size: S = missing();\n    lineType: LT = missing(); fillColor: FC = missing(); alpha: A = missing();\n    span = 0.7; smoother = &quot;svg&quot;; ## the smoothing method to use `svg`, `lm`, `poly`\n    polyOrder = 5;          ## polynomial order to use (no effect for `lm`)\n    bins = -1; binWidth = 0.0; breaks: seq[float] = @[]; binPosition = &quot;none&quot;;\n    position = &quot;identity&quot;; binBy = &quot;full&quot;; density = false): Geom	
geom_histogram	ggplotnim.html#geom_histogram,Aesthetics,float,int,seq[float],C,FC,A,string,string,string,string,LW,LT,HistogramDrawingStyle	ggplotnim: geom_histogram[C: PossibleColor; FC: PossibleColor; LW: PossibleFloat;\n               LT: PossibleLineType; A: PossibleFloat](aes: Aesthetics = aes();\n    data = DataFrame(); binWidth = 0.0; bins = 30; breaks: seq[float] = @[];\n    color: C = missing(); fillColor: FC = missing(); alpha: A = missing();\n    position = &quot;stack&quot;; stat = &quot;bin&quot;; binPosition = &quot;left&quot;; binBy = &quot;full&quot;;\n    density = false; lineWidth: LW = some(0.2); lineType: LT = some(ltSolid);\n    hdKind: HistogramDrawingStyle = hdBars): Geom	
geom_freqpoly	ggplotnim.html#geom_freqpoly,Aesthetics,C,S,LT,FC,A,int,float,seq[float],string,string,string,string	ggplotnim: geom_freqpoly[C: PossibleColor; S: PossibleFloat; LT: PossibleLineType;\n              FC: PossibleColor; A: PossibleFloat](aes: Aesthetics = aes();\n    data = DataFrame(); color: C = missing(); size: S = missing();\n    lineType: LT = missing(); fillColor: FC = missing(); alpha: A = missing();\n    bins = 30; binWidth = 0.0; breaks: seq[float] = @[]; position = &quot;identity&quot;;\n    stat = &quot;bin&quot;; binPosition = &quot;center&quot;; binBy = &quot;full&quot;; density = false): Geom	
geom_tile	ggplotnim.html#geom_tile,Aesthetics,C,FC,A,S,string,int,float,seq[float],string,string,string	ggplotnim: geom_tile[C: PossibleColor; S: PossibleFloat; FC: PossibleColor;\n          A: PossibleFloat](aes: Aesthetics = aes(); data = DataFrame();\n                            color: C = missing(); fillColor: FC = missing();\n                            alpha: A = missing(); size: S = missing();\n                            stat = &quot;identity&quot;; bins = 30; binWidth = 0.0;\n                            breaks: seq[float] = @[]; binPosition = &quot;none&quot;;\n                            position = &quot;identity&quot;; binBy = &quot;full&quot;;\n                            density = false): Geom	
geom_raster	ggplotnim.html#geom_raster,Aesthetics,C,FC,A,S,string,int,float,seq[float],string,string,string	ggplotnim: geom_raster[C: PossibleColor; S: PossibleFloat; FC: PossibleColor;\n            A: PossibleFloat](aes: Aesthetics = aes(); data = DataFrame();\n                              color: C = missing(); fillColor: FC = missing();\n                              alpha: A = missing(); size: S = missing();\n                              stat = &quot;identity&quot;; bins = 30; binWidth = 0.0;\n                              breaks: seq[float] = @[]; binPosition = &quot;none&quot;;\n                              position = &quot;identity&quot;; binBy = &quot;full&quot;;\n                              density = false): Geom	
geom_text	ggplotnim.html#geom_text,Aesthetics,C,S,M,A,F,string,int,float,seq[float],string,string,string	ggplotnim: geom_text[C: PossibleColor; S: PossibleFloat; M: PossibleMarker;\n          A: PossibleFloat; F: PossibleFont](aes: Aesthetics = aes();\n    data = DataFrame(); color: C = missing(); size: S = missing();\n    marker: M = missing(); alpha: A = missing(); font: F = missing();\n    alignKind = taCenter; stat = &quot;identity&quot;; bins = -1; binWidth = 0.0;\n    breaks: seq[float] = @[]; binPosition = &quot;none&quot;; position = &quot;identity&quot;;\n    binBy = &quot;full&quot;; density = false): Geom	
ggridges	ggplotnim.html#ggridges,T,float	ggplotnim: ggridges[T: FormulaNode | string](col: T; overlap = 1.3; showTicks = false;\n                                  labelOrder = initTable()): Ridges	
facet_wrap	ggplotnim.html#facet_wrap,varargs[T],string	ggplotnim: facet_wrap[T: FormulaNode | string](fns: varargs[T]; scales = &quot;fixed&quot;): Facet	
scale_x_log10	ggplotnim.html#scale_x_log10,T	ggplotnim: scale_x_log10[T: int | seq[SomeNumber]](breaks: T = newSeq[float]()): Scale	
scale_y_log10	ggplotnim.html#scale_y_log10,T	ggplotnim: scale_y_log10[T: int | seq[SomeNumber]](breaks: T = newSeq[float]()): Scale	
scale_x_log2	ggplotnim.html#scale_x_log2,T	ggplotnim: scale_x_log2[T: int | seq[SomeNumber]](breaks: T = newSeq[float]()): Scale	
scale_y_log2	ggplotnim.html#scale_y_log2,T	ggplotnim: scale_y_log2[T: int | seq[SomeNumber]](breaks: T = newSeq[float]()): Scale	
sec_axis	ggplotnim.html#sec_axis,FormulaNode,ScaleTransform,ScaleTransform,string	ggplotnim: sec_axis(trans: FormulaNode = f{&quot;&quot;}; transFn: ScaleTransform = nil;\n         invTransFn: ScaleTransform = nil; name: string = &quot;&quot;): SecondaryAxis	
scale_x_discrete	ggplotnim.html#scale_x_discrete,string,P,proc(Value)	ggplotnim: scale_x_discrete[P: PossibleSecondaryAxis](name: string = &quot;&quot;;\n    secAxis: P = missing(); labels: proc (x: Value): string = nil): Scale	
scale_x_discrete	ggplotnim.html#scale_x_discrete,string,OrderedTable[T,U],P	ggplotnim: scale_x_discrete[P: PossibleSecondaryAxis; T; U](name: string = &quot;&quot;;\n    labels: OrderedTable[T, U]; secAxis: P = missing()): Scale	
scale_x_continuous	ggplotnim.html#scale_x_continuous,P,string,T,proc(float),proc(float),proc(float)	ggplotnim: scale_x_continuous[P: PossibleSecondaryAxis; T: int | seq[SomeNumber]](\n    secAxis: P = missing(); name: string = &quot;&quot;; breaks: T = newSeq[float]();\n    labels: proc (x: float): string = nil; trans: proc (x: float): float = nil;\n    invTrans: proc (x: float): float = nil): Scale	
scale_x_date	ggplotnim.html#scale_x_date,string,T,proc(string),string,Duration,DateTickAlgorithmKind	ggplotnim: scale_x_date[T: seq[SomeNumber]](name: string = &quot;&quot;; breaks: T = newSeq[float]();\n                                 isTimestamp = false;\n                                 parseDate: proc (x: string): DateTime = nil;\n                                 formatString: string = &quot;yyyy-MM-dd&quot;;\n    dateSpacing: Duration = initDuration(days = 1);\n                                 dateAlgo: DateTickAlgorithmKind = dtaFilter): DateScale	
scale_y_date	ggplotnim.html#scale_y_date,string,T,proc(string),string,Duration,DateTickAlgorithmKind	ggplotnim: scale_y_date[T: seq[SomeNumber]](name: string = &quot;&quot;; breaks: T = newSeq[float]();\n                                 isTimestamp = false;\n                                 parseDate: proc (x: string): DateTime = nil;\n                                 formatString: string = &quot;yyyy-MM-dd&quot;;\n    dateSpacing: Duration = initDuration(days = 1);\n                                 dateAlgo: DateTickAlgorithmKind = dtaFilter): DateScale	
scale_y_continuous	ggplotnim.html#scale_y_continuous,string,T,P,proc(float),proc(float),proc(float)	ggplotnim: scale_y_continuous[P: PossibleSecondaryAxis; T: int | seq[SomeNumber]](\n    name: string = &quot;&quot;; breaks: T = newSeq[float](); secAxis: P = missing();\n    labels: proc (x: float): string = nil; trans: proc (x: float): float = nil;\n    invTrans: proc (x: float): float = nil): Scale	
scale_y_discrete	ggplotnim.html#scale_y_discrete,string,P,proc(Value)	ggplotnim: scale_y_discrete[P: PossibleSecondaryAxis](name: string = &quot;&quot;;\n    secAxis: P = missing(); labels: proc (x: Value): string = nil): Scale	
scale_y_discrete	ggplotnim.html#scale_y_discrete,string,OrderedTable[T,U],P	ggplotnim: scale_y_discrete[P: PossibleSecondaryAxis; T; U](name: string = &quot;&quot;;\n    labels: OrderedTable[T, U]; secAxis: P = missing()): Scale	
scale_x_reverse	ggplotnim.html#scale_x_reverse,string,P,DiscreteKind	ggplotnim: scale_x_reverse[P: PossibleSecondaryAxis](name: string = &quot;&quot;;\n    secAxis: P = missing(); dcKind: DiscreteKind = dcContinuous): Scale	
scale_y_reverse	ggplotnim.html#scale_y_reverse,string,P,DiscreteKind	ggplotnim: scale_y_reverse[P: PossibleSecondaryAxis](name: string = &quot;&quot;;\n    secAxis: P = missing(); dcKind: DiscreteKind = dcContinuous): Scale	
scale_fill_continuous	ggplotnim.html#scale_fill_continuous,string	ggplotnim: scale_fill_continuous(name: string = &quot;&quot;;\n                      scale: ginger.Scale = (low: 0.0, high: 0.0)): Scale	
scale_fill_discrete	ggplotnim.html#scale_fill_discrete,string	ggplotnim: scale_fill_discrete(name: string = &quot;&quot;): Scale	
scale_fill_manual	ggplotnim.html#scale_fill_manual,Table[T,Color]	ggplotnim: scale_fill_manual[T](values: Table[T, Color]): Scale	
scale_color_continuous	ggplotnim.html#scale_color_continuous,string	ggplotnim: scale_color_continuous(name: string = &quot;&quot;;\n                       scale: ginger.Scale = (low: 0.0, high: 0.0)): Scale	
scale_color_manual	ggplotnim.html#scale_color_manual,Table[T,Color]	ggplotnim: scale_color_manual[T](values: Table[T, Color]): Scale	
scale_color_gradient	ggplotnim.html#scale_color_gradient,,string	ggplotnim: scale_color_gradient(scale: ColorScale | seq[uint32]; name: string = &quot;custom&quot;): Scale	
scale_color_identity	ggplotnim.html#scale_color_identity,string	ggplotnim: scale_color_identity(col = &quot;&quot;): Scale	
scale_fill_identity	ggplotnim.html#scale_fill_identity,string	ggplotnim: scale_fill_identity(col = &quot;&quot;): Scale	
scale_size_identity	ggplotnim.html#scale_size_identity,string	ggplotnim: scale_size_identity(col = &quot;&quot;): Scale	
scale_alpha_identity	ggplotnim.html#scale_alpha_identity,string	ggplotnim: scale_alpha_identity(col = &quot;&quot;): Scale	
scale_fill_gradient	ggplotnim.html#scale_fill_gradient,,string	ggplotnim: scale_fill_gradient(scale: ColorScale | seq[uint32]; name: string = &quot;custom&quot;): Scale	
scale_size_manual	ggplotnim.html#scale_size_manual,Table[T,float]	ggplotnim: scale_size_manual[T](values: Table[T, float]): Scale	
scale_size_discrete	ggplotnim.html#scale_size_discrete	ggplotnim: scale_size_discrete(sizeRange = DefaultSizeRange): Scale	
scale_size_continuous	ggplotnim.html#scale_size_continuous	ggplotnim: scale_size_continuous(sizeRange = DefaultSizeRange): Scale	
scale_alpha_discrete	ggplotnim.html#scale_alpha_discrete	ggplotnim: scale_alpha_discrete(alphaRange = DefaultAlphaRange): Scale	
scale_alpha_continuous	ggplotnim.html#scale_alpha_continuous	ggplotnim: scale_alpha_continuous(alphaRange = DefaultAlphaRange): Scale	
ggtitle	ggplotnim.html#ggtitle,string,string	ggplotnim: ggtitle(title: string; subTitle = &quot;&quot;; titleFont = font();\n        subTitleFont = font(8.0)): Theme	
legendPosition	ggplotnim.html#legendPosition,float,float	ggplotnim: legendPosition(x = 0.0; y = 0.0): Theme	
legendOrder	ggplotnim.html#legendOrder,seq[int]	ggplotnim: legendOrder(idx: seq[int]): Theme	
hideLegend	ggplotnim.html#hideLegend	ggplotnim: hideLegend(): Theme	
canvasColor	ggplotnim.html#canvasColor,C	ggplotnim: canvasColor[C: PossibleColor](color: C): Theme	
theme_opaque	ggplotnim.html#theme_opaque	ggplotnim: theme_opaque(): Theme	
theme_transparent	ggplotnim.html#theme_transparent	ggplotnim: theme_transparent(): Theme	
theme_void	ggplotnim.html#theme_void,C	ggplotnim: theme_void[C: PossibleColor](color: C = white): Theme	
gridLines	ggplotnim.html#gridLines,C	ggplotnim: gridLines[C: PossibleColor](enable = true; width = Inf; color: C = white;\n                            onlyAxes = false): Theme	
minorGridLines	ggplotnim.html#minorGridLines	ggplotnim: minorGridLines(enable = true; width = Inf): Theme	
backgroundColor	ggplotnim.html#backgroundColor,C	ggplotnim: backgroundColor[C: PossibleColor](color: C = grey92): Theme	
gridLineColor	ggplotnim.html#gridLineColor,C	ggplotnim: gridLineColor[C: PossibleColor](color: C = white): Theme	
theme_latex	ggplotnim.html#theme_latex	ggplotnim: theme_latex(): Theme	
prefer_columns	ggplotnim.html#prefer_columns	ggplotnim: prefer_columns(): Theme	
prefer_rows	ggplotnim.html#prefer_rows	ggplotnim: prefer_rows(): Theme	
xlab	ggplotnim.html#xlab,string,string	ggplotnim: xlab(label = &quot;&quot;; margin = NaN; rotate = NaN; alignTo = &quot;none&quot;; font = font();\n     tickFont = font(); tickMargin = NaN): Theme	
ylab	ggplotnim.html#ylab,string,string	ggplotnim: ylab(label = &quot;&quot;; margin = NaN; rotate = NaN; alignTo = &quot;none&quot;; font = font();\n     tickFont = font(); tickMargin = NaN): Theme	
xlim	ggplotnim.html#xlim,T,U,string	ggplotnim: xlim[T, U: SomeNumber](low: T; high: U; outsideRange = &quot;&quot;): Theme	
ylim	ggplotnim.html#ylim,T,U,string	ggplotnim: ylim[T, U: SomeNumber](low: T; high: U; outsideRange = &quot;&quot;): Theme	
xMargin	ggplotnim.html#xMargin,T,string	ggplotnim: xMargin[T: SomeNumber](margin: T; outsideRange = &quot;&quot;): Theme	
yMargin	ggplotnim.html#yMargin,T,string	ggplotnim: yMargin[T: SomeNumber](margin: T; outsideRange = &quot;&quot;): Theme	
margin	ggplotnim.html#margin,T	ggplotnim: margin[T: string | UnitKind](left, right, top, bottom = NaN;\n                             unit: T = ukCentimeter): Theme	
facetMargin	ggplotnim.html#facetMargin,T	ggplotnim: facetMargin[T: Quantity | SomeNumber](margin: T; quantityKind = ukCentimeter): Theme	
annotate	ggplotnim.html#annotate,string,float	ggplotnim: annotate(text: string; left = NaN; bottom = NaN; x = NaN; y = NaN;\n         font = font(12.0); rotate = 0.0; backgroundColor = white): Annotation	
`+`	ggplotnim.html#+,GgPlot,Geom	ggplotnim: `+`(p: GgPlot; geom: Geom): GgPlot	
`+`	ggplotnim.html#+,GgPlot,Facet	ggplotnim: `+`(p: GgPlot; facet: Facet): GgPlot	
`+`	ggplotnim.html#+,GgPlot,Ridges	ggplotnim: `+`(p: GgPlot; ridges: Ridges): GgPlot	
`+`	ggplotnim.html#+,GgPlot,Annotation	ggplotnim: `+`(p: GgPlot; annot: Annotation): GgPlot	
`+`	ggplotnim.html#+,GgPlot,Theme	ggplotnim: `+`(p: GgPlot; theme: Theme): GgPlot	
`+`	ggplotnim.html#+,GgPlot,Scale	ggplotnim: `+`(p: GgPlot; scale: Scale): GgPlot	
`+`	ggplotnim.html#+,GgPlot,DateScale	ggplotnim: `+`(p: GgPlot; dateScale: DateScale): GgPlot	
generateRidge	ggplotnim.html#generateRidge,Viewport,Ridges,GgPlot,FilledScales,Theme	ggplotnim: generateRidge(view: Viewport; ridge: Ridges; p: GgPlot;\n              filledScales: FilledScales; theme: Theme; hideLabels = false;\n              hideTicks = false)	
drawAnnotations	ggplotnim.html#drawAnnotations,Viewport,GgPlot	ggplotnim: drawAnnotations(view: var Viewport; p: GgPlot)	
ggcreate	ggplotnim.html#ggcreate,GgPlot,T,T	ggplotnim: ggcreate[T: SomeNumber](p: GgPlot; width: T = 640.0; height: T = 480.0): PlotView	
ggmulti	ggplotnim.html#ggmulti,openArray[GgPlot],string,int,int,seq[int],seq[int],string,string,string,string	ggplotnim: ggmulti(plts: openArray[GgPlot]; fname: string; width = 640; height = 480;\n        widths: seq[int] = @[]; heights: seq[int] = @[]; useTeX = false;\n        onlyTikZ = false; standalone = false; texTemplate = &quot;&quot;; caption = &quot;&quot;;\n        label = &quot;&quot;; placement = &quot;htbp&quot;)	
ggdraw	ggplotnim.html#ggdraw,Viewport,string,TeXOptions	ggplotnim: ggdraw(view: Viewport; fname: string; texOptions: TeXOptions = TeXOptions())	
ggdraw	ggplotnim.html#ggdraw,PlotView,string,TeXOptions	ggplotnim: ggdraw(plt: PlotView; fname: string; texOptions: TeXOptions = TeXOptions())	
ggsave	ggplotnim.html#ggsave,GgPlot,string,float,float,TeXOptions,BackendKind	ggplotnim: ggsave(p: GgPlot; fname: string; width = 640.0; height = 480.0;\n       texOptions: TeXOptions; backend: BackendKind = bkNone)	
ggsave	ggplotnim.html#ggsave,GgPlot,string,float,float,string,string,string,string	ggplotnim: ggsave(p: GgPlot; fname: string; width = 640.0; height = 480.0; useTeX = false;\n       onlyTikZ = false; standalone = false; texTemplate = &quot;&quot;; caption = &quot;&quot;;\n       label = &quot;&quot;; placement = &quot;htbp&quot;)	
ggsave	ggplotnim.html#ggsave,string,float,float,string,string,string,string	ggplotnim: ggsave(fname: string; width = 640.0; height = 480.0; useTeX = false;\n       onlyTikZ = false; standalone = false; texTemplate = &quot;&quot;; caption = &quot;&quot;;\n       label = &quot;&quot;; placement = &quot;htbp&quot;; backend = bkNone): Draw	
`+`	ggplotnim.html#+,GgPlot,Draw	ggplotnim: `+`(p: GgPlot; d: Draw)	
ggvega	ggplotnim.html#ggvega,string,float,float	ggplotnim: ggvega(fname = &quot;&quot;; width = 640.0; height = 480.0; pretty = true): VegaDraw	
ggvegatex	ggplotnim.html#ggvegatex,string,float,float,string,string,string	ggplotnim: ggvegatex(fname: string; width = 640.0; height = 480.0; caption = &quot;&quot;;\n          label = &quot;&quot;; placement = &quot;htbp&quot;): VegaTeX	
`%`	ggplotnim.html#%	ggplotnim: `%`(t: tuple): json.JsonNode	
ggjson	ggplotnim.html#ggjson,string,float,float	ggplotnim: ggjson(fname: string; width = 640.0; height = 480.0; backend = bkCairo): JsonDummyDraw	
`+`	ggplotnim.html#+,GgPlot,JsonDummyDraw	ggplotnim: `+`(p: GgPlot; jsDraw: JsonDummyDraw)	
ggplotnim overview	ggplotnim.html#ggplotnim-overview	 ggplotnim overview	
Creating a DF	ggplotnim.html#ggplotnim-overview-creating-a-df	  Creating a DF	
From seq[T]	ggplotnim.html#creating-a-df-from-seq-t	   From <tt class="docutils literal"><span class="pre">seq[T]</span></tt>	
From a CSV / TSV file	ggplotnim.html#creating-a-df-from-a-csv-slash-tsv-file	   From a CSV / TSV file	
Manipulating a DF	ggplotnim.html#ggplotnim-overview-manipulating-a-df	  Manipulating a DF	
